import java.util.*;

class Solution {
    public List<Integer> solution(int n, int k) {
        List<Integer> answer = new ArrayList<>();
        for(int i=1; k*i<=n; i++){
            answer.add(k*i);
        }
         
        return answer;
         
    }
}
처음엔 반환값을 `List<Integer>` 로 해서 구현했다. k의 배수가 n보다 작을 동안만 정수 리스트 answer에 배수 값을 추가하고 리턴한다.

반환값을 `int[]` 로 하고 코드를 실행했더니 리턴 값이 안 맞는 오류가 생겨서 헤매다가 반환 값을 바꾸지 않았다는 걸 깨닫고 고쳐서 풀었다.




===================================================================================================================================================

import java.util.*;

class Solution {
    public int[] solution(int n, int k) {
        List<Integer> answer = new ArrayList<>();
        for(int i=1; i<=n; i++){
            if(i%k==0) answer.add(i);
        }
        
        return answer.stream().mapToInt(Integer::intValue).toArray();
         
    }
}

다른 사람의 풀이를 보니 처음에 리스트로 실행해서 `add` 메서드를 사용하는 건 나와 동일한데, 반환 값을 기본 코드 그대로 `int[]` 를 반환한 사람이 있었다. 코딩테스트 합격하기 책에서 나왔던 것처럼, ArrayList를 int형 배열로 반환해서 return 한다. 

ArrayList는 정해진 데이터의 개수가 없을 때 주로 활용하는 자료형이다. 문제 기본 코드에는 `import java.util.*` 이 없지만, 리스트 같은 자료형을 사용하려면 추가해줘야 한다.

자바 스트림에 대한 이해가 필요한 문제였다.
